{"version":3,"sources":["assets/Scripts/Game.js"],"names":["Bird","require","Background","Constant","Storage","Game","cc","Class","Component","properties","pipeMaxOffsetY","pipeMinGap","pipeMaxGap","pipeSpawnInterval","pipeSpawnOffsetX","gameReflashTime","scoreScaleDuration","gameMenu","type","Node","bird","pipesNode","pipePrefabs","Prefab","background","gameOverText","Label","scoreText","highScoreText","onLoad","setInputControl","pipes","size","winSize","groundBox","groundNode","getBoundingBox","groundTop","y","height","isGameOver","curScore","getHighScore","string","HIGHSCORE_TXT","self","eventManager","addListener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","_onTouchBegan","bind","node","touch","onJump","onStartGame","active","onStartDrop","schedule","spawnPipes","gameUpdate","GROUND_MOVE_INTERVAL","pipeUp","instantiate","PIPE_UP","getComponent","init","pipeHeight","spriteFrame","getRect","x","width","Math","floor","random","pipeDown","PIPE_DOWN","pipeGap","addChild","push","i","length","curPipeNode","GROUND_VX","birdBox","pipeBox","Intersection","rectRect","onGameOver","curPipe","isPassed","addScore","PIPE_SPAWN_OFFSET_X","splice","removeChild","action1","scaleTo","action2","action3","runAction","sequence","setHighScore","GAMEOVER_TXT","unscheduleAllCallbacks","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["const Bird = require('Bird');\r\nconst Background = require('Background');\r\nconst Constant = require('Constant'); \r\n\r\nvar Storage = require('Storage');\r\n\r\nvar Game = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 管道纵向最大偏移值\r\n        pipeMaxOffsetY: 150,\r\n        // 上下管道间最小间隙\r\n        pipeMinGap: 80,\r\n        // 上下管道间最大间隙\r\n        pipeMaxGap: 150,\r\n        // 管道生成时间间隔\r\n        pipeSpawnInterval: 4.5,\r\n        // 管道生成时，屏幕外横向偏移位置\r\n        pipeSpawnOffsetX: 30,\r\n        // 重新刷新时间\r\n        gameReflashTime: 5,\r\n        // 形变动画播放间隔\r\n        scoreScaleDuration: 0.2,\r\n        // 游戏菜单节点\r\n        gameMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 小鸟对象\r\n        bird: {\r\n            default: null,\r\n            type: Bird\r\n        },\r\n        // 管道创建节点\r\n        pipesNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 管道预制数组\r\n        pipePrefabs: {\r\n            default: [],\r\n            type: [cc.Prefab]\r\n        },\r\n        // 地板对象\r\n        background: {\r\n            default: null,\r\n            type: Background\r\n        },\r\n        // 游戏失败文字标签\r\n        gameOverText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 当前分数标签\r\n        scoreText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 最高分标签\r\n        highScoreText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化触摸事件\r\n        this.setInputControl();\r\n        // 初始化管道数组\r\n        this.pipes = [];\r\n        // 获取屏幕尺寸\r\n        this.size = cc.winSize;\r\n        // 获取地板的包围盒\r\n        var groundBox = this.background.groundNode[0].getBoundingBox();\r\n        // 获取地板顶部的纵坐标\r\n        this.groundTop = groundBox.y + groundBox.height/2;\r\n        // 初始化游戏失败标志位\r\n        this.isGameOver = false;\r\n        // 初始化当前分数\r\n        this.curScore = 0;\r\n        // 开始游戏界面，如有历史最高分则显示该成绩\r\n        if ( Storage.getHighScore() > 0 ) {\r\n            this.highScoreText.string = Constant.HIGHSCORE_TXT + Storage.getHighScore();\r\n        }\r\n    },\r\n\r\n    setInputControl: function() {\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: self._onTouchBegan.bind(self)\r\n        }, self.node);\r\n    },\r\n    \r\n    _onTouchBegan: function( touch, event ) {\r\n        if ( this.isGameOver === true )\r\n            return;\r\n        this.bird.onJump();\r\n    },    \r\n    \r\n    onStartGame: function () {\r\n        // 关闭菜单节点显示\r\n        this.gameMenu.active = false;\r\n        // 小鸟开始下落\r\n        this.bird.onStartDrop();\r\n        // 从0开始显示分数\r\n        this.scoreText.string = \"\" + this.curScore;\r\n        // 启动管道生成定时器\r\n        this.schedule(this.spawnPipes, this.pipeSpawnInterval);\r\n        // 启动游戏逻辑更新定时器\r\n        this.schedule(this.gameUpdate, Constant.GROUND_MOVE_INTERVAL);\r\n    },\r\n\r\n    spawnPipes: function() {\r\n        // 从管道预制（上端），生成管道实例\r\n        var pipeUp = cc.instantiate(this.pipePrefabs[Constant.PIPE_UP]);\r\n        // 定义为上端类型\r\n        pipeUp.getComponent('Pipe').init(Constant.PIPE_UP);\r\n        // 获取管道的高度（上端与上端的相同）\r\n        var pipeHeight = pipeUp.getComponent('cc.Sprite').spriteFrame.getRect().height;\r\n        // 设置上端管道的横向起始位置（屏幕右端另加一定偏移）\r\n        pipeUp.x = this.size.width / 2 + this.pipeSpawnOffsetX;\r\n        // 设置上端管道的纵向起始位置（随机取偏移量）\r\n        pipeUp.y = Math.floor(Math.random() * this.pipeMaxOffsetY) + pipeHeight/2;\r\n        // 下端生成逻辑基本与上端相同\r\n        var pipeDown = cc.instantiate(this.pipePrefabs[Constant.PIPE_DOWN]);\r\n        pipeDown.getComponent('Pipe').init(Constant.PIPE_DOWN);\r\n        pipeDown.x = this.size.width / 2 + this.pipeSpawnOffsetX;\r\n        // 随机生成上端与下端管道之间的间隙值（pipeMinGap与pipeMaxGap之间）\r\n        var pipeGap = Math.floor(Math.random() * (this.pipeMaxGap - this.pipeMinGap)) + this.pipeMinGap;\r\n        pipeDown.y = pipeUp.y - pipeGap - pipeHeight;\r\n        // 添加管道到pipes节点上\r\n        this.pipesNode.addChild(pipeUp);\r\n        this.pipesNode.addChild(pipeDown);\r\n        // 添加管道到管道数组中\r\n        this.pipes.push(pipeUp);\r\n        this.pipes.push(pipeDown);\r\n    },\r\n\r\n    gameUpdate: function() {\r\n        for ( var i = 0; i < this.pipes.length; i ++ ) {\r\n            // 获取当前管道对象节点\r\n            var curPipeNode = this.pipes[i];\r\n            // 对管道进行移动操作\r\n            curPipeNode.x += Constant.GROUND_VX;\r\n            \r\n            // 获取小鸟的包围盒\r\n            var birdBox = this.bird.node.getBoundingBox();\r\n            // 获取当前管道的包围盒\r\n            var pipeBox = curPipeNode.getBoundingBox();\r\n            // var birdRect = new cc.Rect(birdBox.x - birdBox.width / 2, birdBox.y - birdBox.height / 2,\r\n            //     birdBox.width, birdBox.height);\r\n            // var pipeRect = new cc.Rect(pipeBox.x - pipeBox.width / 2, pipeBox.y - pipeBox.height / 2,\r\n            //     pipeBox.width, pipeBox.height);\r\n            // 根据两个矩形范围判断是否相交\r\n            if (cc.Intersection.rectRect(birdBox, pipeBox)) {\r\n                this.onGameOver();\r\n                return;\r\n            }\r\n            \r\n            // 获取当前管道对象\r\n            var curPipe = curPipeNode.getComponent('Pipe');\r\n            // 判断小鸟是否顺利通过管道，是则加分\r\n            if ( curPipeNode.x < this.bird.node.x && curPipe.isPassed === false \r\n                && curPipe.type === Constant.PIPE_UP) {\r\n                curPipe.isPassed = true;\r\n                this.addScore();\r\n            }\r\n            \r\n            // 超出屏幕范围的管道，从数组中移除，并从节点上删除\r\n            if ( curPipeNode.x < -(this.size.width/2 + Constant.PIPE_SPAWN_OFFSET_X)) {\r\n                this.pipes.splice(i, 1);\r\n                this.pipesNode.removeChild(curPipeNode, true);\r\n            } \r\n        }\r\n        \r\n        // 小鸟触地，则死亡\r\n        if (this.bird.node.y < this.groundTop ) {\r\n            this.onGameOver();\r\n        }\r\n    },\r\n    \r\n    addScore: function() {\r\n        // 加分\r\n        this.curScore ++;\r\n        // 显示当前分数\r\n        this.scoreText.string = \"\" + this.curScore;\r\n        var action1 = cc.scaleTo(this.scoreScaleDuration, 1.1, 0.6);\r\n        var action2 = cc.scaleTo(this.scoreScaleDuration, 0.8, 1.2);\r\n        var action3 = cc.scaleTo(this.scoreScaleDuration, 1, 1);\r\n        // 播放形变动画\r\n        this.scoreText.node.runAction(cc.sequence(action1, action2, action3));\r\n    },\r\n    \r\n    onGameOver: function() {\r\n        // 设置游戏失败标志位\r\n        this.isGameOver = true;\r\n        // 游戏失败，如超过最高分则成绩\r\n        if ( this.curScore > Storage.getHighScore() ) {\r\n            Storage.setHighScore(this.curScore);\r\n        }\r\n        // 死亡时，显示“Game Over”\r\n        this.gameOverText.string = Constant.GAMEOVER_TXT;\r\n        // 关闭所有定时器\r\n        this.bird.unscheduleAllCallbacks();\r\n        this.background.unscheduleAllCallbacks();\r\n        this.unscheduleAllCallbacks();\r\n        // 一定时间后，重新刷新游戏到开始状态\r\n        this.schedule(function() {\r\n            cc.director.loadScene('game');\r\n        }, this.gameReflashTime);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}